//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace ImagineProject.Models
{
    public partial class Pasajero
    {
        public Pasajero()
        {
            this.Pasaje = new HashSet<Pasaje>();
            this.Tag = new HashSet<Tag>();
        }

        [ScaffoldColumn(false)]
        public int id_pasajero { get; set; }

        [Required(ErrorMessage = "Pasaporte es obligatorio")]
        [Display(Name = "Pasaporte")]
        [StringLength(50, ErrorMessage = "{0} no debe exceder los 50 caracteres.")]
        public string pasaporte { get; set; }

        [Required(ErrorMessage = "Nombres son obligatorios")]
        [Display(Name = "Nombres")]
        [StringLength(100, ErrorMessage = "{0} no debe exceder los 100 caracteres.")]
        [RegularExpression(@"^[a-zA-ZÒ—·ÈÌÛ˙]{1}[a-zA-ZÒ—·ÈÌÛ˙ ]{1,}$", ErrorMessage = "Solo letras.")]
        public string nombres { get; set; }

        [Required(ErrorMessage = "Apellidos son obligatorios")]
        [Display(Name = "Apellidos")]
        [StringLength(100, ErrorMessage = "{0} no debe exceder los 100 caracteres.")]
        [RegularExpression(@"^[a-zA-ZÒ—·ÈÌÛ˙]{1}[a-zA-ZÒ—·ÈÌÛ˙ ]{1,}$", ErrorMessage = "Solo letras.")]
        public string apellidos { get; set; }

        [ScaffoldColumn(false)]
        public System.DateTime fecha_registro { get; set; }

        [Required(ErrorMessage = "DirecciÛn es obligatoria")]
        [Display(Name = "DirecciÛn")]
        [StringLength(255, ErrorMessage = "{0} no debe exceder los 255 caracteres.")]
        public string direccion { get; set; }

        [ScaffoldColumn(false)]
        public bool estado { get; set; }

        [Display(Name = "Numero de contacto")]
        [StringLength(50, ErrorMessage = "{0} no debe exceder los 50 caracteres.")]
        public string numero_contacto { get; set; }

        [Display(Name = "E-mail")]
        [RegularExpression(@"^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$", ErrorMessage = "E-mail no valido.")]
        [StringLength(100, ErrorMessage = "{0} no debe exceder los 255 caracteres.")]
        public string e_mail { get; set; }

        [Required(ErrorMessage = "Sexo es obligatoria")]
        [Display(Name = "Sexo")]
        public string sexo { get; set; }

        [Required(ErrorMessage = "Fecha de nacimiento es obligatoria")]
        [DisplayFormat(DataFormatString = "{0:dd-MM-yyyy}")]
        [Display(Name = "Fecha de nacimiento")]
        public System.DateTime fecha_nac { get; set; }

        [Required(ErrorMessage = "Seleccione ciudad")]
        [Display(Name = "Ciudad")]
        public int id_ciudad { get; set; }

        public virtual Ciudad Ciudad { get; set; }
        public virtual ICollection<Pasaje> Pasaje { get; set; }
        public virtual ICollection<Tag> Tag { get; set; }
    }

}
